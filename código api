#BIBLIOTECAS NECESSÁRIAS
from selenium import webdriver
import time
import os
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import requests
import openai
from selenium.webdriver.common.action_chains import ActionChains

# API
agent = {"User-Agent": 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36'}

# CHAVE
api = requests.get("https://editacodigo.com.br/index/api-whatsapp/zdWnzEDhA4KCmR974TbKexVlOUBfWij6", headers=agent)
time.sleep(1)
api = api.text
api = api.split(".n.")
bolinha_notificacao = api[3].strip()
contato_cliente = api[4].strip()
caixa_msg = api[5].strip()
msg_cliente = api[6].strip()
caixa_msg2 = api[7].strip()
caixa_pesquisa = api[8].strip()

# Obtém o diretório atual
dir_path = os.getcwd()

# Configura as opções do Chrome
chrome_options = Options()
chrome_options.add_argument(r"user-data-dir=" + os.path.join(dir_path, "pasta", "sessao"))
chrome_driver_path = r'C:\Users\DELL\Documents\bot ia\chromedriver.exe'
service = webdriver.chrome.service.Service(chrome_driver_path)
driver = webdriver.Chrome(service=service, options=chrome_options)
driver.get('https://web.whatsapp.com')
time.sleep(10)

def bot():
    try:
        print("AGUARDANDO NOVAS MENSAGENS......")

        # Encontra a bolinha de notificação
        bolinhas = driver.find_elements(By.CLASS_NAME, bolinha_notificacao)
        print(f"Bolinhas encontradas: {len(bolinhas)}")
        
        if bolinhas:
            # Seleciona a última bolinha de notificação
            clica_bolinha = bolinhas[-1]
            print("Clicando na bolinha de notificação...")

            # Realiza a ação de clicar na bolinha de notificação
            acao_bolinha = ActionChains(driver)
            acao_bolinha.move_to_element_with_offset(clica_bolinha, 0, -20)
            acao_bolinha.click()
            acao_bolinha.perform()
            acao_bolinha.click()
            acao_bolinha.perform()

            print("Bolinha clicada, pegando mensagem do cliente...")
            # PEGAR A MSG CLIENTE
            todas_as_msg = driver.find_elements(By.CLASS_NAME, msg_cliente)
            todas_as_msg_texto = [e.text for e in todas_as_msg]
            msg = todas_as_msg_texto[-1]
            print(f"Mensagem recebida: {msg}")
            time.sleep(2)

            # PROCESSAR NA API IA
            print("Processando mensagem na API do OpenAI...")
            openai.api_key = # COLOQUE AQUI A API DO SEU CHAT GPT, LEMBRANDO QUE TEM QUE SER O PAGO OK?

            try:
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": "You are a helpful assistant."},
                        {"role": "user", "content": msg}
                    ],
                    temperature=1,
                    max_tokens=256,
                    top_p=1,
                    frequency_penalty=0,
                    presence_penalty=0
                )
                resposta = response['choices'][0]['message']['content']
                print(f"Resposta gerada: {resposta}")
                time.sleep(3)

                # RESPONDER A MENSAGEM
                print("Respondendo mensagem...")
                campo_de_texto = driver.find_element(By.XPATH, caixa_msg)
                campo_de_texto.click()
                time.sleep(3)
                campo_de_texto.send_keys(resposta, Keys.ENTER)
                time.sleep(2)
                print("Mensagem respondida.")
            except openai.error.OpenAIError as e:
                print(f"Ocorreu um erro ao acessar a API do OpenAI: {e}")

    except Exception as e:
        print(f"Ocorreu um erro: {e}")

# Chama a função bot para executá-la
while True:
    bot()
    time.sleep(10)  # Aguarda 10 segundos antes de verificar novamente
